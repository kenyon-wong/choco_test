name: Pull, Export and Upload Docker Images

on:
  workflow_dispatch:  # 允许手动触发

jobs:
  pull-and-export:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker
      uses: docker/setup-buildx-action@v3

    - name: Define Docker Images
      run: |
        echo "IMMICH_IMAGES=ghcr.io/immich-app/postgres:16-vectorchord0.4.3-pgvectors0.3.0 jlesage/dupeguru:latest jlesage/handbrake:latest linuxserver/freshrss:latest linuxserver/syncthing:latest mariadb:11.7 photoprism/photoprism:latest valkey/valkey:8 ghcr.io/immich-app/immich-machine-learning:release ghcr.io/immich-app/immich-server:release cloudflare/cloudflared:latest" >> $GITHUB_ENV

    - name: Pull Docker images
      run: |
        set -e
        for IMAGE in $IMMICH_IMAGES; do
          echo "Pulling $IMAGE"
          docker pull $IMAGE || echo "Failed to pull $IMAGE"
        done

    - name: Create output directory
      run: mkdir -p docker-images

    - name: Export and save Docker images
      run: |
        set -e
        for IMAGE in $IMMICH_IMAGES; do
          IMAGE_NAME=$(echo $IMAGE | sed 's/[:\/]/_/g')  # Create a valid file name by replacing special characters
          echo "Exporting $IMAGE to docker-images/$IMAGE_NAME.tar"
          docker save $IMAGE -o docker-images/$IMAGE_NAME.tar || echo "Failed to save $IMAGE"
          
          # Upload each image individually as an artifact
          echo "Uploading $IMAGE_NAME.tar as artifact"
          mkdir -p docker-images/$IMAGE_NAME
          mv docker-images/$IMAGE_NAME.tar docker-images/$IMAGE_NAME/

          # Use the upload-artifact action to upload the single image
          uses: actions/upload-artifact@v4
          with:
            name: $IMAGE_NAME
            path: docker-images/$IMAGE_NAME/$IMAGE_NAME.tar
            retention-days: 7
        done
